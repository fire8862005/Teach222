<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>38</value>
  </metadata>
</root>